@using SmartManager.Models.Students;
@model IQueryable<Student>
<!DOCTYPE html>
<html lang="en">
<head>
</head>
<body>

    @{
        ViewData["Title"] = "GetStudentWithPayment";
    }
    <style>
        .btn-md-custom {
            padding: 0.3rem 0.75rem;
            font-size: 1rem;
        }
    </style>

    <div class="container p-3">
        <div class="row pt-4">
            <div class="col-6">
                <h2 class="text-dark">Student List</h2>
            </div>
            <div class="col-6 text-end">
                <a asp-controller="Student" asp-action="" class="btn btn-primary">
                    <i class="bi bi-plus-circle"></i> &nbsp; Add New Student
                </a>
            </div>
        </div>
        <br />

        <div class="row pt-3">
            <div class="col-3">
                <input type="text" id="searchInput" class="form-control" placeholder="Search">
            </div>
            <div class="col-3">
                <select id="yearSelector" class="form-select">
                    <!-- Добавьте варианты выбора года -->
                    <option value="2023">2023</option>
                    <option value="2024">2024</option>
                </select>
            </div>
            <div class="col-3">
                <select id="monthSelector" class="form-select">
                    <!-- Добавьте варианты выбора месяца -->
                    <option value="1">January</option>
                    <option value="2">February</option>
                    <!-- и так далее -->
                </select>
            </div>
        </div>
        <br />

        <div class="row">
            <div class="col-12">
                <p>Total Students: @Model.Count()</p>
            </div>
        </div>

        <table class="table">
            <thead>
                <tr>
                    <th scope="col">#</th>
                    <th scope="col">GivenName</th>
                    <th scope="col">Surname</th>
                    <th scope="col">PhoneNumber</th>
                    <th scope="col">GroupName</th>
                    <th scope="col">Payments</th>
                </tr>
            </thead>
            <tbody>
                @{
                    int i = 1;
                    foreach (var item in Model)
                    {
                        <tr class="searchable-row">
                            <th scope="row">@i</th>
                            <td>@item.GivenName</td>
                            <td>@item.Surname</td>
                            <td>@item.PhoneNumber</td>
                            <td>@item.Group.GroupName</td>
                            <td>
                                <button class="btn btn-success toggle-attendance" data-student-id="@item.Id" data-is-paid="true">
                                    <i class="bi bi-check-circle"></i> Paid
                                </button>
                                <button class="btn btn-danger toggle-attendance" data-student-id="@item.Id" data-is-paid="false">
                                    <i class="bi bi-x-circle"></i> NotPaid
                                </button>
                            </td>

                        </tr>
                        i++;
                    }
                }
            </tbody>
        </table>
    </div>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        var paidStudents = [];
        var notPaidStudents = [];

        function updateStudents(studentId, isPaid) {
            if (isPaid) {
                notPaidStudents = notPaidStudents.filter(function (id) {
                    return id !== studentId;
                });
                paidStudents.push(studentId);
            } else {
                paidStudents = paidStudents.filter(function (id) {
                    return id !== studentId;
                });
                notPaidStudents.push(studentId);
            }
        }

        function filterStudents() {
            var selectedYear = $("#yearSelector").val();
            var selectedMonth = $("#monthSelector").val();

            $(".searchable-row").each(function () {
                var studentId = $(this).data("student-id");
                var isPaid = paidStudents.includes(studentId);

                if (isPaid && selectedYear == 2023 && selectedMonth == 1) {
                    $(this).show();
                } else if (!isPaid && selectedYear == 2023 && selectedMonth == 2) {
                    $(this).show();
                } else {
                    $(this).hide();
                }
            });
        }

        $(document).ready(function () {
            $("#searchInput").on("keyup", function () {
                var value = $(this).val().toLowerCase();
                $(".searchable-row").filter(function () {
                    $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1);
                });
            });

            $(".toggle-attendance").click(function () {
                var button = $(this);
                var studentId = button.data("student-id");
                var isPaid = button.data("is-paid");

                $.post("/Payment/UpdatePayment", { studentId: studentId, isPaid: isPaid }, function (data) {
                    updateStudents(studentId, isPaid);
                    filterStudents();
                });
            });

            $("#yearSelector, #monthSelector").change(function () {
                filterStudents();
            });

            // Вызовите функцию filterStudents() при загрузке страницы, чтобы скрыть/показать студентов в зависимости от начальных значений месяца и года
            filterStudents();
        });
    </script>




</body>
</html>
